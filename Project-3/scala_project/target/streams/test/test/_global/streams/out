[0m[[0m[0mdebug[0m] [0m[0mRunning TaskDef(de.uni_saarland.cs.se.BasicVariabilityTypeTests, org.scalatest.tools.Framework$$anon$1@426f66a4, false, [SuiteSelector])[0m
[0m[[0m[0mdebug[0m] [0m[0mRunning TaskDef(de.uni_saarland.cs.se.BasicSimpleTypeTests, org.scalatest.tools.Framework$$anon$1@426f66a4, false, [SuiteSelector])[0m
[0m[[0m[0minfo[0m] [0m[0m[32mBasicSimpleTypeTests:[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[32mThe expression 'Const(True)'[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[32m- should have the type 'BoolTy'[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[32mThe expression 'Const(False)'[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[32m- should have the type 'BoolTy'[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[32mThe expression 'Const(Num(42))'[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[32m- should have the type 'NumTy'[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[32mThe variable in 'x'[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[32m- must be in the context[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[32mThe arguments to 'Smaller'[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[32m- must have the type 'Num'[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[32mThe condition in 'If'[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[32m- must have the type 'BoolTy'[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[32mThe 'Id' in 'Let'[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[31m- must not be in the context already *** FAILED ***[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[31m  Success(BoolTy) did not equal Error @ Let(x,Const(Num(5)),Smaller(Id(x),Const(Num(4))))[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[31m    Context: (x: NumTy) (BasicSimpleTypeTests.scala:51)[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[31m  Analysis:[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[31m  Success(context: -> (x: NumTy), expr: -> Let(x,Const(Num(5)),Smaller(Id(x),Const(Num(4)))), message: -> , t: BoolTy -> )[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[32mAll language features[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[31m- should be implemented *** FAILED ***[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[31m  Success(BoolTy) did not equal Success(NumTy) (BasicSimpleTypeTests.scala:58)[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[31m  Analysis:[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[31m  Success(t: BoolTy -> NumTy)[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[32mBasicVariabilityTypeTests:[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[32mThe expression 'Const(True)'[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[32m- should have the type 'BoolTy'[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[32mThe expression 'Const(False)'[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[32m- should have the type 'BoolTy'[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[32mThe expression 'Const(Num(42))'[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[32m- should have the type 'NumTy'[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[32mThe variable in 'x'[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[32m- must be in the context[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[32mThe arguments to 'Smaller'[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[32m- must have the type 'Num'[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[32mThe condition in 'If'[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[32m- must have the type 'BoolTy'[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[32mThe 'Id' in 'Let'[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[32m- must not be in the context already[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[32mThe expression 'Choice(A || B, True, 5)'[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[31m- should have a VType with two entries *** FAILED ***[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[31m  Error @ Choice((A_0 âˆ¨ B_1),Const(True),Const(Num(5)))[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[31m    Message: ERROR![0m[0m
[0m[[0m[0minfo[0m] [0m[0m[31m    Context: (âŠ¤,) did not equal Success((BoolTy => (A_0 âˆ¨ B_1))[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[31m  (NumTy => Â¬(A_0 âˆ¨ B_1))) (BasicVariabilityTypeTests.scala:69)[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[31m  Analysis:[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[31m  Failure(context: (âŠ¤,) -> , expr: Choice((A_0 âˆ¨ B_1),Const(True),Const(Num(5))) -> , message: ERROR! -> , t: -> (BoolTy => (A_0 âˆ¨ B_1))[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[31m(NumTy => Â¬(A_0 âˆ¨ B_1)))[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[36mRun completed in 736 milliseconds.[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[36mTotal number of tests run: 16[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[36mSuites: completed 2, aborted 0[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[36mTests: succeeded 13, failed 3, canceled 0, ignored 0, pending 0[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[31m*** 3 TESTS FAILED ***[0m[0m
[0m[[0m[31merror[0m] [0m[0mFailed tests:[0m
[0m[[0m[31merror[0m] [0m[0m	de.uni_saarland.cs.se.BasicSimpleTypeTests[0m
[0m[[0m[31merror[0m] [0m[0m	de.uni_saarland.cs.se.BasicVariabilityTypeTests[0m
[0m[[0m[31merror[0m] [0m[0m(Test / [31mtest[0m) sbt.TestsFailedException: Tests unsuccessful[0m
